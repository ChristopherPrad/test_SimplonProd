{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Desktop/test_simplonprod/client/src/components/AllContact.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ModifContact from \"./ModifContact\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass allContact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = () => {\n      axios.get(\"http://localhost:3006/contacts/all\").then(response => {\n        this.setState({\n          data: response.data,\n          loading: false\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleClickBtn = id => {\n      console.log(\"ok\");\n      axios.delete(\"http://localhost:3006/contacts/del/\" + id).then(res => this.fetchData()).catch(err => console.log(\"error\"));\n    };\n\n    this.state = {\n      isCliked: false,\n      data: [],\n      loading: true,\n      value: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  } // state = {\n  //   loading: true,\n  //   data: [],\n  //   isCliked: false;\n  // };\n\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  handleClick(value) {\n    console.log(value);\n    this.setState({\n      isCliked: !this.state.isCliked\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    const filteredContacts = contacts.filter(contact => {\n      const query = this.state.text.toLowerCase();\n      return contact.name.toLowerCase().indexOf(query) >= 0 || contact.number.toLowerCase().indexOf(query) >= 0;\n    });\n\n    if (this.state.loading === true) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"filled-name\",\n        label: \"Filter by name or phone\",\n        className: classes.textField,\n        value: this.state.text,\n        onChange: this.handleChange(\"text\"),\n        margin: \"normal\",\n        variant: \"filled\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Project\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), filteredContacts.map((value, index) => {\n        return React.createElement(\"div\", {\n          className: \"container\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(ModifContact, {\n          nom: value.nom,\n          prenom: value.prenom // image={value.image}\n          ,\n          email: value.email,\n          numero: value.numero,\n          poste: value.poste,\n          date: value.date,\n          id: value._id,\n          handleClickBtn: this.handleClickBtn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }));\n      }));\n    }\n  }\n\n}\n\nexport default allContact;","map":{"version":3,"sources":["/Users/Chris/Desktop/test_simplonprod/client/src/components/AllContact.js"],"names":["React","Component","axios","ModifContact","TextField","allContact","constructor","props","fetchData","get","then","response","setState","data","loading","catch","err","console","log","handleChange","name","event","target","value","handleClickBtn","id","delete","res","state","isCliked","handleClick","bind","componentDidMount","render","filteredContacts","contacts","filter","contact","query","text","toLowerCase","indexOf","number","classes","textField","map","index","nom","prenom","email","numero","poste","date","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ModifContact from \"./ModifContact\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass allContact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isCliked: false,\n      data: [],\n      loading: true,\n      value: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  // state = {\n  //   loading: true,\n  //   data: [],\n  //   isCliked: false;\n\n  // };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    axios\n      .get(\"http://localhost:3006/contacts/all\")\n      .then(response => {\n        this.setState({\n          data: response.data,\n\n          loading: false\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleClick(value) {\n    console.log(value);\n    this.setState({\n      isCliked: !this.state.isCliked\n    });\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleClickBtn = id => {\n    console.log(\"ok\");\n    axios\n      .delete(\"http://localhost:3006/contacts/del/\" + id)\n      .then(res => this.fetchData())\n      .catch(err => console.log(\"error\"));\n  };\n\n  render() {\n    const filteredContacts = contacts.filter(contact => {\n      const query = this.state.text.toLowerCase();\n      return (\n        contact.name.toLowerCase().indexOf(query) >= 0 ||\n        contact.number.toLowerCase().indexOf(query) >= 0\n      );\n    });\n    if (this.state.loading === true) {\n      return <h1>Loading...</h1>;\n    } else {\n      return (\n        <div>\n          <TextField\n            id=\"filled-name\"\n            label=\"Filter by name or phone\"\n            className={classes.textField}\n            value={this.state.text}\n            onChange={this.handleChange(\"text\")}\n            margin=\"normal\"\n            variant=\"filled\"\n            autoComplete=\"off\"\n          />\n\n          <h1 className=\"text-center\">Project</h1>\n          <br />\n          <br />\n          {filteredContacts.map((value, index) => {\n            return (\n              <div className=\"container\" key={index}>\n                <ModifContact\n                  nom={value.nom}\n                  prenom={value.prenom}\n                  // image={value.image}\n                  email={value.email}\n                  numero={value.numero}\n                  poste={value.poste}\n                  date={value.date}\n                  id={value._id}\n                  handleClickBtn={this.handleClickBtn}\n                />\n                <br />\n                <br />\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  }\n}\n\nexport default allContact;\n"]},"metadata":{},"sourceType":"module"}