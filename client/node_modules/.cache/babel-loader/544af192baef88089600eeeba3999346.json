{"ast":null,"code":"import _defineProperty from \"/Users/Chris/Desktop/test_simplonprod/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Chris/Desktop/test_simplonprod/client/src/components/AddForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport NumberFormat from \"react-number-format\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    maxWidth: 360,\n    margin: \"auto\",\n    padding: 15,\n    marginTop: 15\n  },\n  textField: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    marginBottom: 0,\n    marginTop: 15\n  },\n  mTop0: {\n    marginTop: 0\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  dialogContent: {\n    overflow: \"hidden\"\n  },\n  close: {\n    padding: theme.spacing.unit / 2\n  }\n});\n\nexport class AddForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fields: {\n        id: 0,\n        name: \"\",\n        number: \"\"\n      },\n      errors: {\n        name: false,\n        number: false\n      },\n      open: false,\n      snackbarOpen: false\n    };\n\n    this.handleSnackClose = () => {\n      this.setState({\n        snackbarOpen: false\n      });\n    };\n\n    this.handleModalClick = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleModalClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleChange = name => event => {\n      let _this$state = this.state,\n          fields = _this$state.fields,\n          errors = _this$state.errors;\n      fields[name] = event.target.value;\n      fields[name].length === 0 ? errors[name] = true : errors[name] = false;\n      this.setState({\n        fields\n      });\n    };\n\n    this.handleClick = () => {\n      const contacts = this.props.contacts;\n      let _this$state2 = this.state,\n          fields = _this$state2.fields,\n          errors = _this$state2.errors,\n          open = _this$state2.open,\n          snackbarOpen = _this$state2.snackbarOpen,\n          isError = false;\n\n      for (let key in fields) {\n        fields[key].length === 0 ? errors[key] = true : errors[key] = false;\n        if (errors[key] === true) isError = true;\n      }\n\n      if (!isError) {\n        open === true && (open = false);\n        fields[\"id\"] = contacts.length;\n        snackbarOpen = true;\n        this.props.addContact(_objectSpread({}, fields));\n      }\n\n      this.setState({\n        errors,\n        open,\n        snackbarOpen\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state3 = this.state,\n          name = _this$state3.name,\n          number = _this$state3.number,\n          errors = _this$state3.errors,\n          open = _this$state3.open,\n          snackbarOpen = _this$state3.snackbarOpen;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: snackbarOpen,\n      autoHideDuration: 2000,\n      onClose: this.handleSnackClose,\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Person Successfully added\"),\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        className: classes.close,\n        onClick: this.handleSnackClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"inherit\",\n      className: classes.button,\n      onClick: this.handleModalClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Add New Person\"), React.createElement(Dialog, {\n      open: open,\n      onClose: this.handleModalClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Add New Person\"), React.createElement(DialogContent, {\n      className: classes.dialogContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"filled-name\",\n      label: \"Enter a name\",\n      className: classNames(classes.mTop0, classes.textField),\n      value: name,\n      onChange: this.handleChange(\"name\"),\n      margin: \"normal\",\n      variant: \"filled\",\n      error: errors[\"name\"],\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(NumberFormat, {\n      customInput: TextField,\n      format: \"+90 (###) ### ## ##\",\n      mask: \"_\",\n      id: \"filled-phone\",\n      label: \"Enter a phone 5**\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"filled\",\n      onChange: this.handleChange(\"number\"),\n      value: number,\n      error: errors[\"number\"],\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleModalClose,\n      color: \"primary\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"contained\",\n      size: \"large\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(SaveIcon, {\n      className: classNames(classes.leftIcon, classes.iconSmall),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), \"Add\")))));\n  }\n\n}\nAddForm.propTypes = {\n  addContact: PropTypes.func,\n  contacts: PropTypes.object\n};\nAddForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(AddForm);","map":{"version":3,"sources":["/Users/Chris/Desktop/test_simplonprod/client/src/components/AddForm.js"],"names":["React","Component","PropTypes","classNames","withStyles","TextField","Button","SaveIcon","NumberFormat","Dialog","DialogActions","DialogContent","DialogTitle","Snackbar","IconButton","CloseIcon","styles","theme","container","display","flexWrap","justifyContent","maxWidth","margin","padding","marginTop","textField","width","border","marginBottom","mTop0","button","spacing","unit","iconSmall","fontSize","leftIcon","marginRight","dialogContent","overflow","close","AddForm","state","fields","id","name","number","errors","open","snackbarOpen","handleSnackClose","setState","handleModalClick","handleModalClose","handleChange","event","target","value","length","handleClick","contacts","props","isError","key","addContact","render","classes","vertical","horizontal","propTypes","func","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport NumberFormat from \"react-number-format\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    maxWidth: 360,\n    margin: \"auto\",\n    padding: 15,\n    marginTop: 15\n  },\n  textField: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    marginBottom: 0,\n    marginTop: 15\n  },\n  mTop0: {\n    marginTop: 0\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  dialogContent: {\n    overflow: \"hidden\"\n  },\n  close: {\n    padding: theme.spacing.unit / 2\n  }\n});\n\nexport class AddForm extends Component {\n  state = {\n    fields: {\n      id: 0,\n      name: \"\",\n      number: \"\"\n    },\n    errors: {\n      name: false,\n      number: false\n    },\n    open: false,\n    snackbarOpen: false\n  };\n\n  handleSnackClose = () => {\n    this.setState({ snackbarOpen: false });\n  };\n\n  handleModalClick = () => {\n    this.setState({ open: true });\n  };\n\n  handleModalClose = () => {\n    this.setState({ open: false });\n  };\n\n  static propTypes = {\n    addContact: PropTypes.func,\n    contacts: PropTypes.object\n  };\n\n  handleChange = name => event => {\n    let { fields, errors } = this.state;\n    fields[name] = event.target.value;\n    fields[name].length === 0 ? (errors[name] = true) : (errors[name] = false);\n    this.setState({ fields });\n  };\n\n  handleClick = () => {\n    const { contacts } = this.props;\n    let { fields, errors, open, snackbarOpen } = this.state,\n      isError = false;\n\n    for (let key in fields) {\n      fields[key].length === 0 ? (errors[key] = true) : (errors[key] = false);\n      if (errors[key] === true) isError = true;\n    }\n\n    if (!isError) {\n      open === true && (open = false);\n      fields[\"id\"] = contacts.length;\n      snackbarOpen = true;\n      this.props.addContact({\n        ...fields\n      });\n    }\n    this.setState({\n      errors,\n      open,\n      snackbarOpen\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { name, number, errors, open, snackbarOpen } = this.state;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n          open={snackbarOpen}\n          autoHideDuration={2000}\n          onClose={this.handleSnackClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">Person Successfully added</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={this.handleSnackClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n        <form className={classes.container}>\n          <Button\n            variant=\"contained\"\n            color=\"inherit\"\n            className={classes.button}\n            onClick={this.handleModalClick}\n          >\n            Add New Person\n          </Button>\n\n          <Dialog\n            open={open}\n            onClose={this.handleModalClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">Add New Person</DialogTitle>\n            <DialogContent className={classes.dialogContent}>\n              <TextField\n                id=\"filled-name\"\n                label=\"Enter a name\"\n                className={classNames(classes.mTop0, classes.textField)}\n                value={name}\n                onChange={this.handleChange(\"name\")}\n                margin=\"normal\"\n                variant=\"filled\"\n                error={errors[\"name\"]}\n                autoComplete=\"off\"\n              />\n\n              <NumberFormat\n                customInput={TextField}\n                format=\"+90 (###) ### ## ##\"\n                mask=\"_\"\n                id=\"filled-phone\"\n                label=\"Enter a phone 5**\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"filled\"\n                onChange={this.handleChange(\"number\")}\n                value={number}\n                error={errors[\"number\"]}\n                autoComplete=\"off\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={this.handleModalClose}\n                color=\"primary\"\n                className={classes.button}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={this.handleClick}\n              >\n                <SaveIcon\n                  className={classNames(classes.leftIcon, classes.iconSmall)}\n                />\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </form>\n      </div>\n    );\n  }\n}\nAddForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(AddForm);\n"]},"metadata":{},"sourceType":"module"}